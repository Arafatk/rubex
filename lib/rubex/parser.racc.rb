#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require_relative 'lexer.rex.rb'
require_relative 'ast.rb'

include Rubex::AST

module Rubex
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 145)

def parse file_name
  @lexer = Rubex::Lexer.new
  @lexer.parse_file file_name
  @yydebug = true
end

def next_token
  @lexer.next_token
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    44,    14,    15,    19,    57,     3,     5,    22,    23,    24,
    25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
    35,    36,    37,    38,    39,    40,     6,    47,    21,    85,
    14,    15,    19,     8,    10,    47,    22,    23,    24,    25,
    26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
    36,    37,    38,    39,    40,    62,    63,    21,    86,    14,
    15,    19,    66,    47,    47,    22,    23,    24,    25,    26,
    27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
    37,    38,    39,    40,    79,    63,    21,    14,    15,    19,
    47,    62,   nil,    22,    23,    24,    25,    26,    27,    28,
    29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
    39,    40,   nil,   nil,    21,    14,    15,    19,   nil,   nil,
   nil,    22,    23,    24,    25,    26,    27,    28,    29,    30,
    31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
   nil,   nil,    21,    14,    15,    19,   nil,   nil,   nil,    22,
    23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
    33,    34,    35,    36,    37,    38,    39,    40,   nil,   nil,
    21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
    31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
    22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
    32,    33,    34,    35,    36,    37,    38,    39,    40,    52,
    64,    54,    52,    65,    54,    52,   nil,    54,    52,   nil,
    54,   nil,   nil,    49,    50,    51,    49,    50,    51,    49,
    50,    51,    49,    50,    51,    52,    84,    54,    52,   nil,
    54,   nil,    70,    71,    72,    73,    74,    75,   nil,    49,
    50,    51,    49,    50,    51,    70,    71,    72,    73,    74,
    75,    70,    71,    72,    73,    74,    75,    70,    71,    72,
    73,    74,    75,    70,    71,    72,    73,    74,    75,    70,
    71,    72,    73,    74,    75 ]

racc_action_check = [
    11,    11,    11,    11,    18,     1,     2,    11,    11,    11,
    11,    11,    11,    11,    11,    11,    11,    11,    11,    11,
    11,    11,    11,    11,    11,    11,     3,    18,    11,    77,
    77,    77,    77,     5,     7,    12,    77,    77,    77,    77,
    77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
    77,    77,    77,    77,    77,    20,    21,    77,    78,    78,
    78,    78,    43,    44,    45,    78,    78,    78,    78,    78,
    78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
    78,    78,    78,    78,    59,    62,    78,     9,     9,     9,
    64,    79,   nil,     9,     9,     9,     9,     9,     9,     9,
     9,     9,     9,     9,     9,     9,     9,     9,     9,     9,
     9,     9,   nil,   nil,     9,    56,    56,    56,   nil,   nil,
   nil,    56,    56,    56,    56,    56,    56,    56,    56,    56,
    56,    56,    56,    56,    56,    56,    56,    56,    56,    56,
   nil,   nil,    56,    57,    57,    57,   nil,   nil,   nil,    57,
    57,    57,    57,    57,    57,    57,    57,    57,    57,    57,
    57,    57,    57,    57,    57,    57,    57,    57,   nil,   nil,
    57,    10,    10,    10,    10,    10,    10,    10,    10,    10,
    10,    10,    10,    10,    10,    10,    10,    10,    10,    10,
    65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
    65,    65,    65,    65,    65,    65,    65,    65,    65,    14,
    41,    14,    15,    41,    15,    19,   nil,    19,    52,   nil,
    52,   nil,   nil,    14,    14,    14,    15,    15,    15,    19,
    19,    19,    52,    52,    52,    63,    76,    63,    69,   nil,
    69,   nil,    76,    76,    76,    76,    76,    76,   nil,    63,
    63,    63,    69,    69,    69,    48,    48,    48,    48,    48,
    48,    55,    55,    55,    55,    55,    55,    58,    58,    58,
    58,    58,    58,    80,    80,    80,    80,    80,    80,    83,
    83,    83,    83,    83,    83 ]

racc_action_pointer = [
   nil,     5,     4,    26,   nil,     2,   nil,     5,   nil,    83,
   161,    -3,     3,   nil,   180,   183,   nil,   nil,    -5,   186,
    24,    14,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   180,   nil,    31,    31,    32,   nil,   nil,   219,   nil,
   nil,   nil,   189,   nil,   nil,   225,   111,   139,   231,    51,
   nil,   nil,    43,   206,    58,   180,   nil,   nil,   nil,   209,
   nil,   nil,   nil,   nil,   nil,   nil,   206,    26,    55,    60,
   237,   nil,   nil,   243,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
    -3,   -61,    -1,   -61,    -2,   -61,    89,   -61,   -26,   -12,
   -61,   -12,   -61,    -7,   -61,   -61,   -10,   -11,   -61,   -61,
   -61,   -61,   -35,   -36,   -37,   -38,   -39,   -40,   -41,   -42,
   -43,   -44,   -45,   -46,   -47,   -48,   -49,   -50,   -51,   -52,
   -53,   -61,   -29,   -61,   -61,   -61,    -6,   -60,    -8,   -23,
   -24,   -25,   -61,   -33,   -34,    -9,   -12,   -12,   -15,   -16,
   -19,   -20,   -21,   -61,   -61,   -61,   -30,    -4,    -5,   -61,
   -54,   -55,   -56,   -57,   -58,   -59,   -61,   -12,   -12,   -61,
   -22,   -27,   -28,   -31,   -32,   -13,   -14,   -17,   -18 ]

racc_goto_table = [
    45,    61,    60,    48,    55,    46,    11,    43,    58,    42,
     1,    56,     2,     4,     7,     9,    59,    41,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    67,    68,   nil,
   nil,    76,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    80,    77,    78,   nil,   nil,    81,    83,   nil,
    87,    88,    43,   nil,    82,   nil,    45,    45 ]

racc_goto_check = [
     8,    11,    16,    10,    10,     7,     6,    14,    10,    19,
     1,     7,     2,     3,     4,     5,    15,    18,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7,     7,   nil,
   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    10,     6,     6,   nil,   nil,     7,    10,   nil,
    11,    16,    14,   nil,    19,   nil,     8,     8 ]

racc_goto_pointer = [
   nil,    10,    12,    11,     9,     8,    -3,    -7,   -11,   nil,
   -11,   -19,   nil,   nil,    -3,    -4,   -18,   nil,     7,    -1,
   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    12,    13,
   nil,    16,    17,    18,    20,   nil,   nil,    53,   nil,   nil,
    69 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 47, :_reduce_1,
  2, 48, :_reduce_2,
  0, 48, :_reduce_3,
  6, 49, :_reduce_4,
  3, 52, :_reduce_5,
  2, 52, :_reduce_6,
  1, 54, :_reduce_7,
  2, 54, :_reduce_8,
  2, 54, :_reduce_9,
  1, 54, :_reduce_10,
  1, 54, :_reduce_11,
  0, 54, :_reduce_12,
  4, 58, :_reduce_13,
  4, 58, :_reduce_14,
  2, 59, :_reduce_15,
  2, 55, :_reduce_16,
  3, 61, :_reduce_17,
  3, 61, :_reduce_18,
  1, 61, :_reduce_19,
  1, 61, :_reduce_20,
  1, 62, :_reduce_21,
  3, 57, :_reduce_22,
  1, 63, :_reduce_23,
  1, 63, :_reduce_24,
  1, 63, :_reduce_25,
  1, 50, :_reduce_26,
  4, 51, :_reduce_27,
  3, 64, :_reduce_28,
  1, 64, :_reduce_29,
  2, 65, :_reduce_30,
  3, 56, :_reduce_31,
  3, 56, :_reduce_32,
  1, 56, :_reduce_33,
  1, 56, :_reduce_34,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_53,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_59,
  1, 53, :_reduce_60 ]

racc_reduce_n = 61

racc_shift_n = 89

racc_token_table = {
  false => 0,
  :error => 1,
  :kDEF => 2,
  :kEND => 3,
  :kRETURN => 4,
  :kPRINT => 5,
  :kIF => 6,
  :kELSIF => 7,
  :kELSE => 8,
  :kTHEN => 9,
  :kDTYPE_UINT => 10,
  :kDTYPE_LINT => 11,
  :kDTYPE_LLINT => 12,
  :kDTYPE_CHAR => 13,
  :kDTYPE_I8 => 14,
  :kDTYPE_I16 => 15,
  :kDTYPE_I32 => 16,
  :kDTYPE_I64 => 17,
  :kDTYPE_UI8 => 18,
  :kDTYPE_UI16 => 19,
  :kDTYPE_UI32 => 20,
  :kDTYPE_UI64 => 21,
  :kDTYPE_INT => 22,
  :kDTYPE_F32 => 23,
  :kDTYPE_F64 => 24,
  :kDTYPE_LF64 => 25,
  :kDTYPE_ROBJ => 26,
  :kDTYPE_ULINT => 27,
  :kDTYPE_ULLINT => 28,
  :tLPAREN => 29,
  :tRPAREN => 30,
  :tIDENTIFIER => 31,
  :tNL => 32,
  :tCOMMA => 33,
  :tSQUOTE => 34,
  :EOF => 35,
  :tPLUS => 36,
  :tMINUS => 37,
  :tMULTIPLY => 38,
  :tDIVIDE => 39,
  :tEXPO => 40,
  :tMODULUS => 41,
  :tASSIGN => 42,
  :tINTEGER => 43,
  :tFLOAT => 44,
  :tSINGLE_CHAR => 45 }

racc_nt_base = 46

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kDEF",
  "kEND",
  "kRETURN",
  "kPRINT",
  "kIF",
  "kELSIF",
  "kELSE",
  "kTHEN",
  "kDTYPE_UINT",
  "kDTYPE_LINT",
  "kDTYPE_LLINT",
  "kDTYPE_CHAR",
  "kDTYPE_I8",
  "kDTYPE_I16",
  "kDTYPE_I32",
  "kDTYPE_I64",
  "kDTYPE_UI8",
  "kDTYPE_UI16",
  "kDTYPE_UI32",
  "kDTYPE_UI64",
  "kDTYPE_INT",
  "kDTYPE_F32",
  "kDTYPE_F64",
  "kDTYPE_LF64",
  "kDTYPE_ROBJ",
  "kDTYPE_ULINT",
  "kDTYPE_ULLINT",
  "tLPAREN",
  "tRPAREN",
  "tIDENTIFIER",
  "tNL",
  "tCOMMA",
  "tSQUOTE",
  "EOF",
  "tPLUS",
  "tMINUS",
  "tMULTIPLY",
  "tDIVIDE",
  "tEXPO",
  "tMODULUS",
  "tASSIGN",
  "tINTEGER",
  "tFLOAT",
  "tSINGLE_CHAR",
  "$start",
  "program",
  "methods",
  "ruby_method",
  "f_name",
  "f_arglist",
  "stmts",
  "eol",
  "stmt",
  "var_decl_or_init",
  "expr",
  "normal_init",
  "if_block",
  "if_stmt",
  "dtype",
  "decl_or_init",
  "normal_decl",
  "literal",
  "f_args",
  "f_normal_arg",
  "binary_op" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 25)
  def _reduce_1(val, _values, result)
     result = Node.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 28)
  def _reduce_2(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 29)
  def _reduce_3(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_4(val, _values, result)
            result = RubyMethodDef.new(val[1], val[2], val[3])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 38)
  def _reduce_5(val, _values, result)
     result = [*val[0], *val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_6(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 44)
  def _reduce_7(val, _values, result)
            variables = []
        dtype = val[0][:dtype]
        val[0][:decl_or_init].each do |di|
          var = Statement::VariableDeclaration.new(dtype, di[:name], di[:value])
          variables << var
        end
  
          result = variables
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 53)
  def _reduce_8(val, _values, result)
     result = Statement::Return.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 54)
  def _reduce_9(val, _values, result)
     result = Statement::Print.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 57)
  def _reduce_10(val, _values, result)
          match = val[0]
      result = Statement::Assign.new match[:name], match[:value]
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 60)
  def _reduce_11(val, _values, result)
     result = Statement::IfBlock.new val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 61)
  def _reduce_12(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 64)
  def _reduce_13(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 65)
  def _reduce_14(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 68)
  def _reduce_15(val, _values, result)
     
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 73)
  def _reduce_16(val, _values, result)
            result = {
          dtype: val[0],
          decl_or_init: val[1]
        }
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 80)
  def _reduce_17(val, _values, result)
     result = [*val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 81)
  def _reduce_18(val, _values, result)
     result = [*val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 82)
  def _reduce_19(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 83)
  def _reduce_20(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 86)
  def _reduce_21(val, _values, result)
     result = { name: val[0] } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 89)
  def _reduce_22(val, _values, result)
     result = { name: val[0], value: val[2] } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 92)
  def _reduce_23(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 93)
  def _reduce_24(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 94)
  def _reduce_25(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 97)
  def _reduce_26(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 100)
  def _reduce_27(val, _values, result)
     result = ArgumentList.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 105)
  def _reduce_28(val, _values, result)
            result = [*val[0], val[2]]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_29(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 110)
  def _reduce_30(val, _values, result)
     result = CBaseType.new val[0], val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 115)
  def _reduce_31(val, _values, result)
            result = Expression::Binary.new val[0], val[1], val[2]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 117)
  def _reduce_32(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 118)
  def _reduce_33(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 119)
  def _reduce_34(val, _values, result)
    
    result
  end
.,.,

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

module_eval(<<'.,.,', 'parser.racc', 127)
  def _reduce_53(val, _values, result)
            result = val[0]
      
    result
  end
.,.,

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

# reduce 57 omitted

# reduce 58 omitted

module_eval(<<'.,.,', 'parser.racc', 131)
  def _reduce_59(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 134)
  def _reduce_60(val, _values, result)
    result = val[0]
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Rubex
