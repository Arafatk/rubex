#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require_relative 'lexer.rex.rb'
require_relative 'ast.rb'

include Rubex::AST

module Rubex
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 168)

def parse file_name
  @lexer = Rubex::Lexer.new
  @lexer.parse_file file_name
  @yydebug = true
end

def next_token
  @lexer.next_token
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    81,    54,    47,    56,    54,    48,    56,    91,    92,     3,
    54,    81,    56,     5,     6,     8,    51,    52,    53,    51,
    52,    53,    10,    68,    43,    51,    52,    53,    73,    74,
    75,    76,    77,    78,    68,    64,    49,    62,    65,    73,
    74,    75,    76,    77,    78,    15,    16,    18,    63,    66,
    68,    21,    22,    23,    24,    25,    26,    27,    28,    29,
    30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
    83,    47,    20,    47,    48,    63,    48,    15,    16,    18,
    68,    91,    92,    21,    22,    23,    24,    25,    26,    27,
    28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    38,    39,    49,    62,    20,    47,    47,    95,    48,    48,
    15,    16,    18,   nil,   nil,   nil,    21,    22,    23,    24,
    25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
    35,    36,    37,    38,    39,   nil,   nil,    20,    15,    16,
    18,   nil,   nil,   nil,    21,    22,    23,    24,    25,    26,
    27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
    37,    38,    39,   nil,   nil,    20,    15,    16,    18,   nil,
   nil,   nil,    21,    22,    23,    24,    25,    26,    27,    28,
    29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
    39,   nil,   nil,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
    37,    38,    39,    21,    22,    23,    24,    25,    26,    27,
    28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    38,    39,    54,   nil,    56,    54,   nil,    56,    54,   nil,
    56,    54,   nil,    56,    54,   nil,    56,    51,    52,    53,
    51,    52,    53,    51,    52,    53,    51,    52,    53,    51,
    52,    53,    88,    73,    74,    75,    76,    77,    78,    73,
    74,    75,    76,    77,    78,    73,    74,    75,    76,    77,
    78,    73,    74,    75,    76,    77,    78,    73,    74,    75,
    76,    77,    78,    73,    74,    75,    76,    77,    78 ]

racc_action_check = [
    58,    15,    12,    15,    16,    12,    16,    80,    80,     1,
    18,    96,    18,     2,     3,     5,    15,    15,    15,    16,
    16,    16,     7,    58,    11,    18,    18,    18,    58,    58,
    58,    58,    58,    58,    96,    40,    13,    19,    40,    96,
    96,    96,    96,    96,    96,    45,    45,    45,    20,    42,
    43,    45,    45,    45,    45,    45,    45,    45,    45,    45,
    45,    45,    45,    45,    45,    45,    45,    45,    45,    45,
    59,    97,    45,    45,    97,    62,    45,    99,    99,    99,
    64,   100,   100,    99,    99,    99,    99,    99,    99,    99,
    99,    99,    99,    99,    99,    99,    99,    99,    99,    99,
    99,    99,    69,    83,    99,    99,   100,    89,    99,   100,
     9,     9,     9,   nil,   nil,   nil,     9,     9,     9,     9,
     9,     9,     9,     9,     9,     9,     9,     9,     9,     9,
     9,     9,     9,     9,     9,   nil,   nil,     9,    92,    92,
    92,   nil,   nil,   nil,    92,    92,    92,    92,    92,    92,
    92,    92,    92,    92,    92,    92,    92,    92,    92,    92,
    92,    92,    92,   nil,   nil,    92,    98,    98,    98,   nil,
   nil,   nil,    98,    98,    98,    98,    98,    98,    98,    98,
    98,    98,    98,    98,    98,    98,    98,    98,    98,    98,
    98,   nil,   nil,    98,    10,    10,    10,    10,    10,    10,
    10,    10,    10,    10,    10,    10,    10,    10,    10,    10,
    10,    10,    10,    65,    65,    65,    65,    65,    65,    65,
    65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
    65,    65,    49,   nil,    49,    54,   nil,    54,    63,   nil,
    63,    72,   nil,    72,    91,   nil,    91,    49,    49,    49,
    54,    54,    54,    63,    63,    63,    72,    72,    72,    91,
    91,    91,    79,    50,    50,    50,    50,    50,    50,    79,
    79,    79,    79,    79,    79,    57,    57,    57,    57,    57,
    57,    71,    71,    71,    71,    71,    71,    84,    84,    84,
    84,    84,    84,    87,    87,    87,    87,    87,    87 ]

racc_action_pointer = [
   nil,     9,    11,    14,   nil,   -16,   nil,    -7,   nil,   106,
   184,    21,   -30,    30,   nil,   -28,   -25,   nil,   -19,     6,
     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     5,   nil,    18,    18,   nil,    41,   nil,   nil,   nil,   203,
   226,   nil,   nil,   nil,   206,   nil,   nil,   238,    -9,    37,
   nil,   nil,    32,   209,    48,   203,   nil,   nil,   nil,    96,
   nil,   244,   212,   nil,   nil,   nil,   nil,   nil,   nil,   232,
     0,   nil,   nil,    72,   250,   nil,   nil,   256,   nil,   104,
   nil,   215,   134,   nil,   nil,   nil,     2,    39,   162,    73,
    74,   nil ]

racc_action_default = [
    -3,   -71,    -1,   -71,    -2,   -71,   102,   -71,   -30,    -8,
   -71,   -71,   -64,    -7,    -9,   -71,   -71,   -12,   -71,   -71,
   -71,   -39,   -40,   -41,   -42,   -43,   -44,   -45,   -46,   -47,
   -48,   -49,   -50,   -51,   -52,   -53,   -54,   -55,   -56,   -57,
   -71,   -33,   -71,   -71,    -5,   -65,   -66,   -68,   -69,   -71,
   -10,   -27,   -28,   -29,   -71,   -37,   -38,   -11,   -71,   -20,
   -23,   -24,   -25,   -71,   -71,   -71,   -34,    -4,   -70,    -6,
   -67,   -14,   -71,   -58,   -59,   -60,   -61,   -62,   -63,   -71,
   -71,   -15,   -16,   -71,   -26,   -31,   -32,   -35,   -36,   -71,
   -17,   -71,    -8,   -21,   -22,   -13,   -71,   -19,    -8,   -71,
   -71,   -18 ]

racc_goto_table = [
    12,    50,    57,    61,    58,    60,    42,    41,    80,    69,
    70,    67,     1,    89,     2,     4,     7,     9,    11,    44,
    45,    59,    40,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    85,   101,   nil,    71,   nil,   nil,   nil,   nil,
    79,   nil,   nil,   nil,   nil,   nil,    98,   nil,   nil,    84,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    87,   nil,
   nil,    42,    86,    69,    70,   nil,   nil,    93,   nil,    94,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    96,   nil,   nil,
   nil,   nil,   nil,    97,   nil,   nil,   nil,   nil,   nil,   100 ]

racc_goto_check = [
     8,    13,    13,    14,    13,    20,    18,    23,    15,    11,
    25,     7,     1,    16,     2,     3,     4,     5,     6,     9,
    10,    19,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     7,    16,   nil,    13,   nil,   nil,   nil,   nil,
    13,   nil,   nil,   nil,   nil,   nil,    15,   nil,   nil,    13,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    13,   nil,
   nil,    18,    23,    11,    25,   nil,   nil,    14,   nil,    20,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    13,   nil,   nil,
   nil,   nil,   nil,     8,   nil,   nil,   nil,   nil,   nil,     8 ]

racc_goto_pointer = [
   nil,    12,    14,    13,    11,    10,     9,   -32,    -9,     7,
     8,   -36,   nil,   -14,   -16,   -50,   -67,   nil,    -4,     2,
   -14,   nil,    12,    -3,   nil,   -35 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    82,   nil,   nil,
    99,    13,    14,   nil,    17,   nil,   nil,    90,    19,   nil,
   nil,    55,   nil,   nil,    72,    46 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 48, :_reduce_1,
  2, 49, :_reduce_2,
  0, 49, :_reduce_3,
  6, 50, :_reduce_4,
  2, 53, :_reduce_5,
  3, 55, :_reduce_6,
  1, 55, :_reduce_none,
  0, 55, :_reduce_8,
  1, 58, :_reduce_9,
  2, 58, :_reduce_10,
  2, 58, :_reduce_11,
  1, 58, :_reduce_12,
  5, 58, :_reduce_13,
  3, 58, :_reduce_14,
  1, 62, :_reduce_15,
  1, 62, :_reduce_16,
  1, 63, :_reduce_17,
  5, 63, :_reduce_18,
  2, 64, :_reduce_19,
  2, 59, :_reduce_20,
  3, 66, :_reduce_21,
  3, 66, :_reduce_22,
  1, 66, :_reduce_23,
  1, 66, :_reduce_24,
  1, 67, :_reduce_25,
  3, 61, :_reduce_26,
  1, 68, :_reduce_27,
  1, 68, :_reduce_28,
  1, 68, :_reduce_29,
  1, 51, :_reduce_30,
  4, 52, :_reduce_31,
  3, 69, :_reduce_32,
  1, 69, :_reduce_33,
  2, 70, :_reduce_34,
  3, 60, :_reduce_35,
  3, 60, :_reduce_36,
  1, 60, :_reduce_37,
  1, 60, :_reduce_38,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_57,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_63,
  0, 56, :_reduce_64,
  1, 56, :_reduce_65,
  1, 57, :_reduce_66,
  2, 57, :_reduce_67,
  1, 72, :_reduce_68,
  1, 72, :_reduce_none,
  1, 54, :_reduce_70 ]

racc_reduce_n = 71

racc_shift_n = 102

racc_token_table = {
  false => 0,
  :error => 1,
  :kDEF => 2,
  :kEND => 3,
  :kRETURN => 4,
  :kPRINT => 5,
  :kIF => 6,
  :kELSIF => 7,
  :kELSE => 8,
  :kTHEN => 9,
  :kDTYPE_UINT => 10,
  :kDTYPE_LINT => 11,
  :kDTYPE_LLINT => 12,
  :kDTYPE_CHAR => 13,
  :kDTYPE_I8 => 14,
  :kDTYPE_I16 => 15,
  :kDTYPE_I32 => 16,
  :kDTYPE_I64 => 17,
  :kDTYPE_UI8 => 18,
  :kDTYPE_UI16 => 19,
  :kDTYPE_UI32 => 20,
  :kDTYPE_UI64 => 21,
  :kDTYPE_INT => 22,
  :kDTYPE_F32 => 23,
  :kDTYPE_F64 => 24,
  :kDTYPE_LF64 => 25,
  :kDTYPE_ROBJ => 26,
  :kDTYPE_ULINT => 27,
  :kDTYPE_ULLINT => 28,
  :tLPAREN => 29,
  :tRPAREN => 30,
  :tIDENTIFIER => 31,
  :tNL => 32,
  :tCOMMA => 33,
  :tSQUOTE => 34,
  :tSCOLON => 35,
  :EOF => 36,
  :tPLUS => 37,
  :tMINUS => 38,
  :tMULTIPLY => 39,
  :tDIVIDE => 40,
  :tEXPO => 41,
  :tMODULUS => 42,
  :tASSIGN => 43,
  :tINTEGER => 44,
  :tFLOAT => 45,
  :tSINGLE_CHAR => 46 }

racc_nt_base = 47

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kDEF",
  "kEND",
  "kRETURN",
  "kPRINT",
  "kIF",
  "kELSIF",
  "kELSE",
  "kTHEN",
  "kDTYPE_UINT",
  "kDTYPE_LINT",
  "kDTYPE_LLINT",
  "kDTYPE_CHAR",
  "kDTYPE_I8",
  "kDTYPE_I16",
  "kDTYPE_I32",
  "kDTYPE_I64",
  "kDTYPE_UI8",
  "kDTYPE_UI16",
  "kDTYPE_UI32",
  "kDTYPE_UI64",
  "kDTYPE_INT",
  "kDTYPE_F32",
  "kDTYPE_F64",
  "kDTYPE_LF64",
  "kDTYPE_ROBJ",
  "kDTYPE_ULINT",
  "kDTYPE_ULLINT",
  "tLPAREN",
  "tRPAREN",
  "tIDENTIFIER",
  "tNL",
  "tCOMMA",
  "tSQUOTE",
  "tSCOLON",
  "EOF",
  "tPLUS",
  "tMINUS",
  "tMULTIPLY",
  "tDIVIDE",
  "tEXPO",
  "tMODULUS",
  "tASSIGN",
  "tINTEGER",
  "tFLOAT",
  "tSINGLE_CHAR",
  "$start",
  "program",
  "methods",
  "ruby_method",
  "f_name",
  "f_arglist",
  "compstmt",
  "eol",
  "stmts",
  "opt_terms",
  "terms",
  "stmt",
  "var_decl_or_init",
  "expr",
  "normal_init",
  "then",
  "if_tail",
  "opt_else",
  "dtype",
  "decl_or_init",
  "normal_decl",
  "literal",
  "f_args",
  "f_normal_arg",
  "binary_op",
  "term" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 25)
  def _reduce_1(val, _values, result)
     result = Node.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 28)
  def _reduce_2(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 29)
  def _reduce_3(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_4(val, _values, result)
            result = RubyMethodDef.new(val[1], val[2], val[3])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 38)
  def _reduce_5(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 41)
  def _reduce_6(val, _values, result)
     result = [*val[0], *val[2]] 
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.racc', 43)
  def _reduce_8(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 48)
  def _reduce_9(val, _values, result)
            variables = []
        dtype = val[0][:dtype]
        val[0][:decl_or_init].each do |di|
          var = Statement::VariableDeclaration.new(dtype, di[:name], di[:value])
          variables << var
        end
  
          result = variables
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 57)
  def _reduce_10(val, _values, result)
     result = Statement::Return.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 58)
  def _reduce_11(val, _values, result)
     result = Statement::Print.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 61)
  def _reduce_12(val, _values, result)
          match = val[0]
      result = Statement::Assign.new match[:name], match[:value]
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 66)
  def _reduce_13(val, _values, result)
          result = Statement::IfBlock.new val[0]
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 68)
  def _reduce_14(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 71)
  def _reduce_15(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 72)
  def _reduce_16(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 75)
  def _reduce_17(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 76)
  def _reduce_18(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 79)
  def _reduce_19(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 84)
  def _reduce_20(val, _values, result)
            result = {
          dtype: val[0],
          decl_or_init: val[1]
        }
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 91)
  def _reduce_21(val, _values, result)
     result = [*val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 92)
  def _reduce_22(val, _values, result)
     result = [*val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 93)
  def _reduce_23(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 94)
  def _reduce_24(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 97)
  def _reduce_25(val, _values, result)
     result = { name: val[0] } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 100)
  def _reduce_26(val, _values, result)
     result = { name: val[0], value: val[2] } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_27(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 104)
  def _reduce_28(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 105)
  def _reduce_29(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 108)
  def _reduce_30(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 111)
  def _reduce_31(val, _values, result)
     result = ArgumentList.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 116)
  def _reduce_32(val, _values, result)
            result = [*val[0], val[2]]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 118)
  def _reduce_33(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 121)
  def _reduce_34(val, _values, result)
     result = CBaseType.new val[0], val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 126)
  def _reduce_35(val, _values, result)
            result = Expression::Binary.new val[0], val[1], val[2]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 128)
  def _reduce_36(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 129)
  def _reduce_37(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 130)
  def _reduce_38(val, _values, result)
    
    result
  end
.,.,

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

module_eval(<<'.,.,', 'parser.racc', 138)
  def _reduce_57(val, _values, result)
            result = val[0]
      
    result
  end
.,.,

# reduce 58 omitted

# reduce 59 omitted

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

module_eval(<<'.,.,', 'parser.racc', 142)
  def _reduce_63(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 145)
  def _reduce_64(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 146)
  def _reduce_65(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 149)
  def _reduce_66(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 150)
  def _reduce_67(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 153)
  def _reduce_68(val, _values, result)
    
    result
  end
.,.,

# reduce 69 omitted

module_eval(<<'.,.,', 'parser.racc', 157)
  def _reduce_70(val, _values, result)
    result = val[0]
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Rubex
