#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require_relative 'lexer.rex.rb'
require_relative 'ast.rb'

include Rubex::AST

module Rubex
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 107)
def parse file_name
  @lexer = Rubex::Lexer.new
  @lexer.parse_file file_name
end

def next_token
  @lexer.next_token
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    40,    14,    18,    19,    20,    21,    22,    23,    24,    25,
    26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
    36,    14,    18,    19,    20,    21,    22,    23,    24,    25,
    26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
    36,    18,    19,    20,    21,    22,    23,    24,    25,    26,
    27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
    18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
    28,    29,    30,    31,    32,    33,    34,    35,    36,    18,
    19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
    29,    30,    31,    32,    33,    34,    35,    36,    56,    57,
    58,    59,    60,    61,    48,     3,     5,    49,     6,     8,
    10,    43,    44,    46,    47,    50,    43,    43,    62,    43,
    65 ]

racc_action_check = [
    11,    11,    11,    11,    11,    11,    11,    11,    11,    11,
    11,    11,    11,    11,    11,    11,    11,    11,    11,    11,
    11,     9,     9,     9,     9,     9,     9,     9,     9,     9,
     9,     9,     9,     9,     9,     9,     9,     9,     9,     9,
     9,    10,    10,    10,    10,    10,    10,    10,    10,    10,
    10,    10,    10,    10,    10,    10,    10,    10,    10,    10,
    44,    44,    44,    44,    44,    44,    44,    44,    44,    44,
    44,    44,    44,    44,    44,    44,    44,    44,    44,    49,
    49,    49,    49,    49,    49,    49,    49,    49,    49,    49,
    49,    49,    49,    49,    49,    49,    49,    49,    46,    46,
    46,    46,    46,    46,    37,     1,     2,    37,     3,     5,
     7,    12,    13,    14,    17,    39,    40,    41,    47,    48,
    55 ]

racc_action_pointer = [
   nil,   105,   104,   108,   nil,    83,   nil,    86,   nil,    17,
    36,    -3,    84,    84,    87,   nil,   nil,    88,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    79,   nil,    89,
    89,    90,   nil,   nil,    55,   nil,    68,    82,    92,    74,
   nil,   nil,   nil,   nil,   nil,    94,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
    -3,   -49,    -1,   -49,    -2,   -49,    67,   -49,   -17,    -9,
   -49,    -9,   -49,    -7,   -49,   -12,   -13,   -49,   -23,   -24,
   -25,   -26,   -27,   -28,   -29,   -30,   -31,   -32,   -33,   -34,
   -35,   -36,   -37,   -38,   -39,   -40,   -41,   -49,   -20,   -49,
   -49,   -49,    -6,   -48,   -49,    -8,   -49,   -14,   -49,   -49,
   -21,    -4,    -5,   -10,   -11,   -49,   -42,   -43,   -44,   -45,
   -46,   -47,   -16,   -18,   -19,   -22,   -15 ]

racc_goto_table = [
    39,    38,    42,    12,     1,    41,     2,     4,     7,     9,
    11,    45,    53,    54,    66,    37,    55,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    51,    52,   nil,   nil,   nil,   nil,   nil,   nil,    63,    39,
    64 ]

racc_goto_check = [
    13,    16,     7,     8,     1,     8,     2,     3,     4,     5,
     6,    10,    11,    12,    14,    15,    17,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     7,     7,   nil,   nil,   nil,   nil,   nil,   nil,     7,    13,
    16 ]

racc_goto_pointer = [
   nil,     4,     6,     5,     3,     2,     1,   -10,    -6,   nil,
    -3,   -32,   -31,   -10,   -48,     5,    -9,   -30 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    13,
   nil,    15,    16,    17,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 38, :_reduce_1,
  2, 39, :_reduce_2,
  0, 39, :_reduce_3,
  6, 40, :_reduce_4,
  3, 43, :_reduce_5,
  2, 43, :_reduce_6,
  1, 45, :_reduce_7,
  2, 45, :_reduce_8,
  0, 45, :_reduce_9,
  3, 46, :_reduce_10,
  3, 46, :_reduce_11,
  1, 46, :_reduce_12,
  1, 46, :_reduce_13,
  2, 48, :_reduce_14,
  4, 49, :_reduce_15,
  0, 51, :_reduce_none,
  1, 41, :_reduce_17,
  4, 42, :_reduce_18,
  3, 52, :_reduce_19,
  1, 52, :_reduce_20,
  2, 53, :_reduce_21,
  3, 47, :_reduce_22,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 50, :_reduce_none,
  1, 50, :_reduce_41,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_47,
  1, 44, :_reduce_48 ]

racc_reduce_n = 49

racc_shift_n = 67

racc_token_table = {
  false => 0,
  :error => 1,
  :kDEF => 2,
  :kEND => 3,
  :kRETURN => 4,
  :kDTYPE_UINT => 5,
  :kDTYPE_LINT => 6,
  :kDTYPE_LLINT => 7,
  :kDTYPE_CHAR => 8,
  :kDTYPE_I8 => 9,
  :kDTYPE_I16 => 10,
  :kDTYPE_I32 => 11,
  :kDTYPE_I64 => 12,
  :kDTYPE_UI8 => 13,
  :kDTYPE_UI16 => 14,
  :kDTYPE_UI32 => 15,
  :kDTYPE_UI64 => 16,
  :kDTYPE_INT => 17,
  :kDTYPE_F32 => 18,
  :kDTYPE_F64 => 19,
  :kDTYPE_LF64 => 20,
  :kDTYPE_ROBJ => 21,
  :kDTYPE_ULINT => 22,
  :kDTYPE_ULLINT => 23,
  :tLPAREN => 24,
  :tRPAREN => 25,
  :tIDENTIFIER => 26,
  :tNL => 27,
  :tCOMMA => 28,
  :tSQUOTE => 29,
  :tPLUS => 30,
  :tMINUS => 31,
  :tMULTIPLY => 32,
  :tDIVIDE => 33,
  :tEXPO => 34,
  :tMODULUS => 35,
  :tASSIGN => 36 }

racc_nt_base = 37

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kDEF",
  "kEND",
  "kRETURN",
  "kDTYPE_UINT",
  "kDTYPE_LINT",
  "kDTYPE_LLINT",
  "kDTYPE_CHAR",
  "kDTYPE_I8",
  "kDTYPE_I16",
  "kDTYPE_I32",
  "kDTYPE_I64",
  "kDTYPE_UI8",
  "kDTYPE_UI16",
  "kDTYPE_UI32",
  "kDTYPE_UI64",
  "kDTYPE_INT",
  "kDTYPE_F32",
  "kDTYPE_F64",
  "kDTYPE_LF64",
  "kDTYPE_ROBJ",
  "kDTYPE_ULINT",
  "kDTYPE_ULLINT",
  "tLPAREN",
  "tRPAREN",
  "tIDENTIFIER",
  "tNL",
  "tCOMMA",
  "tSQUOTE",
  "tPLUS",
  "tMINUS",
  "tMULTIPLY",
  "tDIVIDE",
  "tEXPO",
  "tMODULUS",
  "tASSIGN",
  "$start",
  "program",
  "methods",
  "ruby_method",
  "f_name",
  "f_arglist",
  "stmts",
  "eol",
  "stmt",
  "var_decl_or_init",
  "expr",
  "normal_decl",
  "normal_init",
  "dtype",
  "literal",
  "f_args",
  "f_normal_arg",
  "binary_op" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 23)
  def _reduce_1(val, _values, result)
     result = Node.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 26)
  def _reduce_2(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 27)
  def _reduce_3(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_4(val, _values, result)
            result = RubyMethodDef.new(val[1], val[2])
        result.add_statements val[3]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 37)
  def _reduce_5(val, _values, result)
     result = [val[0], val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 38)
  def _reduce_6(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 41)
  def _reduce_7(val, _values, result)
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 42)
  def _reduce_8(val, _values, result)
     result = Statement::Return.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 43)
  def _reduce_9(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 46)
  def _reduce_10(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 47)
  def _reduce_11(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 48)
  def _reduce_12(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 49)
  def _reduce_13(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_14(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_15(val, _values, result)
    
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.racc', 60)
  def _reduce_17(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 63)
  def _reduce_18(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 68)
  def _reduce_19(val, _values, result)
            result = ArgumentList.new
        result.push val[0]
        result.push val[2]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 72)
  def _reduce_20(val, _values, result)
     
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 75)
  def _reduce_21(val, _values, result)
     result = CBaseType.new val[0], val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 80)
  def _reduce_22(val, _values, result)
            result = Expression::Addition.new val[0], val[2]
      
    result
  end
.,.,

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

module_eval(<<'.,.,', 'parser.racc', 89)
  def _reduce_41(val, _values, result)
            result = val[0]
      
    result
  end
.,.,

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

module_eval(<<'.,.,', 'parser.racc', 93)
  def _reduce_47(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 96)
  def _reduce_48(val, _values, result)
    
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Rubex
